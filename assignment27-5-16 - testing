# Only run the program by calling driver() from the command area.
# Before you run the program, see comment in the createRandomImage(width,height) function below.

# You must not modify this function.
# Exception: You may change the path to which the output file is written
def driver():
  oriPic=createRandomImage(100,100)
  explore(oriPic)
  posterisedPic=smartGrayPosterise(oriPic)
  #explore(posterisedPic)
  #writePictureTo(posterisedPic,"C:\\myA2output_graypoint_diff.png")

# You must implement this function
def grayPosterise(oriPic,newPic,grayPoint):
  for p in getPixels(newPic):
    r = getRed(p)
    g = getGreen(p)
    b = getBlue(p)
    luminance = (r+g+b)/3
    if luminance < grayPoint:
      setColor(p,black)
    if luminance >= grayPoint:
      setColor(p,white)
  #print grayPoint
  #file = "c:\\temp\\imgage"+str(grayPoint)+".jpg"
  #writePictureTo(newPic,file)  

  

  #return #newPic

# You must implement this function   
def smartGrayPosterise(oriPic):
  grayPoint = 75
  maxCount = 80
  newPic = duplicatePicture(oriPic)
  while (grayPoint < maxCount):
    grayPosterise(oriPic,newPic,grayPoint)
    show(newPic)
    #file = "c:\\temp\\imgage"+str(grayPoint)+".jpg"
    #writePictureTo(newPic,file)
    img1 = oriPic
    img2 = newPic
    imageDiff(img1,img2)
    

    grayPoint = grayPoint +1
  
    
    
    
    
  return #posterisedPic


# Assign the first 6 digits of your student number to the variables w1..w6 .
# You must not make any other modifications to this function.
# This is another interesting image processing procedure:
#"Procedural texture synthesis- http://www.google.com/search?q=procedural+texture+synthesis
def createRandomImage(width,height):
  pic=makeEmptyPicture(width,height)
  w1=3
  w2=5
  w3=8
  w4=8
  w5=0
  w6=7
  
  for px in getPixels(pic):
    x=getX(px)
    y=getY(px)
    r=((w6*pow(x,1.9))+(w5*pow(y,1.9))) % 255
    g=((w4*pow(x,2.0))+(w3*pow(y,2.0))) % 255
    b=((w2*pow(x,2.1))+(w1*pow(y,2.1))) % 255
    setColor(px,makeColor(r,g,b))
  return pic


# You must not modify this function.
def imageDiff(img1,img2):
  if getWidth(img1)!=getWidth(img2) or getHeight(img1)!=getHeight(img2):
    print "Error calculating the image difference. img1 dimensions different to img2 dimensions!"
    return -1
    
  totalDistance=0
  for px1 in getPixels(img1):
    x=getX(px1)
    y=getY(px1)
    px2=getPixel(img2,x,y)
    clr1=getColor(px1)
    clr2=getColor(px2)
    totalDistance=totalDistance+ distance(clr1,clr2)
    
  return totalDistance

        
